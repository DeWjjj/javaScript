Index: null.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/null.js b/null.js
new file mode 100644
--- /dev/null	(date 1609518886886)
+++ b/null.js	(date 1609518886886)
@@ -0,0 +1,17 @@
+let testObject = null; //null is a object.
+console.log(typeof testObject);
+if (null == undefined) {
+    console.log("null=undefined.");
+}
+if (testObject) {
+    //This block will not run.
+}
+if (!testObject) {
+    //This block will run.
+}
+if (age) {
+    //This block will not run.
+}
+if (!age) {
+    //This block will run.
+}
\ No newline at end of file
Index: boolean.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/boolean.js b/boolean.js
new file mode 100644
--- /dev/null	(date 1609519331780)
+++ b/boolean.js	(date 1609519331780)
@@ -0,0 +1,8 @@
+let str1 = "DeW",
+    str2 = "";
+if(str1){
+    console.log("NotEmptyString equal true.");
+}
+if(str2){
+    console.log("EmptyString equal false.");
+}
Index: number.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/number.js b/number.js
new file mode 100644
--- /dev/null	(date 1609520424030)
+++ b/number.js	(date 1609520424030)
@@ -0,0 +1,13 @@
+//diffNum
+let intNum=10;
+let octalNum=0o70; //56
+let hexNum1=0xA; //10
+let hexNum2=0x1f; //31
+console.log(hexNum1-hexNum2); //-21
+//float
+let floatNum1=1.1; //1.1
+let floatNum2=.2; //0.2
+let floatNum3=3.33e2; //333 = 3.33 x 10^2
+console.log(floatNum3);
+console.log(floatNum1-floatNum2); //0.9000000000000001
+//Because,the numbers saved method by IEEE754,The others lang has this problem,ex:go java.
Index: parseNum.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/parseNum.js b/parseNum.js
new file mode 100644
--- /dev/null	(date 1609521611880)
+++ b/parseNum.js	(date 1609521611880)
@@ -0,0 +1,13 @@
+let num = "1234blue";
+let num1 = parseInt(num);
+console.log(num1); //1234
+let num2 = Number(num);
+console.log(num2); //NaN
+let num3 = parseInt("0xA"); //10
+let num4 = parseInt(""); //NaN
+let num5 = Number(""); //0
+//Example1:parseInt
+let num6 = parseInt("OxAF",16); //175
+let num7 = parseInt("AF",16); //175
+//Example2:parseFloat
+let num8 = parseFloat("22.22.22"); //22.22
\ No newline at end of file
Index: string.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/string.js b/string.js
new file mode 100644
--- /dev/null	(date 1609522436345)
+++ b/string.js	(date 1609522436345)
@@ -0,0 +1,18 @@
+let name1 = "Jackie";
+let name2 = 'J'; //单一字符的时候推荐使用‘’
+let name3 = `Jackie's netname call DeW!`
+//Ex:error
+//let name4 = '123`;
+console.log("123\n");
+console.log(name1.length); //6
+
+let lang = 'Java';
+lang = lang + "Script";
+console.log(lang);
+
+let num = 11;
+let numAsString = num.toString();
+console.log(num); //"11"
+let love = true;
+let loveAsString = love.toString();
+console.log(love); //"true"
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0caf824e-0104-4279-a742-e1f6755a5d0c\" name=\"默认的\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"TypeScript File\" />\r\n        <option value=\"HTML File\" />\r\n        <option value=\"JavaScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1lv48E4pLTyBOIJVrBaZUaHCSAn\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DefaultHtmlFileTemplate\" value=\"HTML File\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"javascript.nodejs.core.library.configured.version\" value=\"14.15.1\" />\r\n    <property name=\"javascript.nodejs.core.library.typings.version\" value=\"14.14.14\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\r\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_interpreter_path\" value=\"node\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"vcs.Git\" />\r\n    <property name=\"ts.external.directory.path\" value=\"C:\\Users\\dewjj\\AppData\\Local\\JetBrains\\Toolbox\\apps\\WebStorm\\ch-0\\203.5981.135\\plugins\\JavaScriptLanguage\\jsLanguageServicesImpl\\external\" />\r\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\dewjj\\WebstormProjects\\untitled\" />\r\n      <recent name=\"C:\\Users\\dewjj\\WebstormProjects\\untitled\\preload\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"ChromiumRemoteDebugType\" factoryName=\"Chromium Remote\" port=\"9229\" restartOnDisconnect=\"true\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"NodeJSConfigurationType\" singleton=\"false\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"0caf824e-0104-4279-a742-e1f6755a5d0c\" name=\"默认的\" comment=\"\" />\r\n      <created>1608464070377</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1608464070377</updated>\r\n      <workItem from=\"1608464071709\" duration=\"715000\" />\r\n      <workItem from=\"1608537463932\" duration=\"1259000\" />\r\n      <workItem from=\"1608967280481\" duration=\"2150000\" />\r\n      <workItem from=\"1608969456421\" duration=\"1972000\" />\r\n      <workItem from=\"1609073591233\" duration=\"1102000\" />\r\n      <workItem from=\"1609074898010\" duration=\"3283000\" />\r\n      <workItem from=\"1609135717274\" duration=\"595000\" />\r\n      <workItem from=\"1609410126572\" duration=\"2829000\" />\r\n      <workItem from=\"1609414848893\" duration=\"11102000\" />\r\n      <workItem from=\"1609481404038\" duration=\"6072000\" />\r\n      <workItem from=\"1609488227888\" duration=\"50000\" />\r\n      <workItem from=\"1609488284864\" duration=\"23000\" />\r\n      <workItem from=\"1609488541059\" duration=\"488000\" />\r\n      <workItem from=\"1609489040957\" duration=\"442000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n    <option name=\"exactExcludedFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/hello.js\" />\r\n        <option value=\"$PROJECT_DIR$/interface.js\" />\r\n        <option value=\"$PROJECT_DIR$/class.js\" />\r\n        <option value=\"$PROJECT_DIR$/inference.js\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3b5b32dd54c8402d01c54d4a08c64555488c21d6)
+++ b/.idea/workspace.xml	(date 1609626536556)
@@ -1,7 +1,21 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="0caf824e-0104-4279-a742-e1f6755a5d0c" name="默认的" comment="" />
+    <list default="true" id="0caf824e-0104-4279-a742-e1f6755a5d0c" name="默认的" comment="">
+      <change afterPath="$PROJECT_DIR$/${}.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/append.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/boolean.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/capitalize.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lineString.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/map.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/null.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/number.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/parseNum.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/string.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/tagFunction.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/zipTag.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -20,12 +34,15 @@
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="ProjectId" id="1lv48E4pLTyBOIJVrBaZUaHCSAn" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
   <component name="PropertiesComponent">
+    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
     <property name="DefaultHtmlFileTemplate" value="HTML File" />
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
@@ -51,13 +68,37 @@
       <recent name="C:\Users\dewjj\WebstormProjects\untitled\preload" />
     </key>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Node.js.map.js">
     <configuration default="true" type="ChromiumRemoteDebugType" factoryName="Chromium Remote" port="9229" restartOnDisconnect="true">
       <method v="2" />
     </configuration>
     <configuration default="true" type="NodeJSConfigurationType" singleton="false">
       <method v="2" />
     </configuration>
+    <configuration name="append.js" type="NodeJSConfigurationType" singleton="false" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/append.js" working-dir="$PROJECT_DIR$">
+      <method v="2" />
+    </configuration>
+    <configuration name="capitalize.js" type="NodeJSConfigurationType" singleton="false" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/capitalize.js" working-dir="$PROJECT_DIR$">
+      <method v="2" />
+    </configuration>
+    <configuration name="map.js" type="NodeJSConfigurationType" singleton="false" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/map.js" working-dir="$PROJECT_DIR$">
+      <method v="2" />
+    </configuration>
+    <configuration name="tagFunction.js" type="NodeJSConfigurationType" singleton="false" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/tagFunction.js" working-dir="$PROJECT_DIR$">
+      <method v="2" />
+    </configuration>
+    <configuration name="zipTag.js" type="NodeJSConfigurationType" singleton="false" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/zipTag.js" working-dir="$PROJECT_DIR$">
+      <method v="2" />
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Node.js.map.js" />
+        <item itemvalue="Node.js.zipTag.js" />
+        <item itemvalue="Node.js.tagFunction.js" />
+        <item itemvalue="Node.js.append.js" />
+        <item itemvalue="Node.js.capitalize.js" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -81,6 +122,12 @@
       <workItem from="1609488284864" duration="23000" />
       <workItem from="1609488541059" duration="488000" />
       <workItem from="1609489040957" duration="442000" />
+      <workItem from="1609511935374" duration="160000" />
+      <workItem from="1609512105374" duration="139000" />
+      <workItem from="1609512247715" duration="153000" />
+      <workItem from="1609518743424" duration="3931000" />
+      <workItem from="1609590912425" duration="4407000" />
+      <workItem from="1609626329961" duration="205000" />
     </task>
     <servers />
   </component>
@@ -94,6 +141,21 @@
         <option value="$PROJECT_DIR$/inference.js" />
       </list>
     </option>
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+    <option name="oldMeFiltersMigrated" value="true" />
+  </component>
+  <component name="VcsManagerConfiguration">
+    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: lineString.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lineString.js b/lineString.js
new file mode 100644
--- /dev/null	(date 1609522798009)
+++ b/lineString.js	(date 1609522798009)
@@ -0,0 +1,11 @@
+let lineString = "First line\nSecond line";
+console.log(lineString);
+let lineString1 = `First line1
+Second line2`;
+console.log(lineString1);
+//Ex:
+let div1 = `
+<div1>
+    <p>123</p>
+</div1>`
+console.log(div1);
\ No newline at end of file
Index: ${}.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/${}.js b/${}.js
new file mode 100644
--- /dev/null	(date 1609591317068)
+++ b/${}.js	(date 1609591317068)
@@ -0,0 +1,10 @@
+let name = "DeWjjj";
+let helloName = "hello," + name + "!";
+console.log(helloName);
+let helloName1 = `hello,${name}!`;
+console.log(helloName1);
+if (helloName == helloName1) {
+    console.log("It's same.")
+}
+let foo = {toString: () => 123};
+console.log(`hello,${foo}!`);
\ No newline at end of file
Index: capitalize.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/capitalize.js b/capitalize.js
new file mode 100644
--- /dev/null	(date 1609591662182)
+++ b/capitalize.js	(date 1609591662182)
@@ -0,0 +1,4 @@
+function capitalize(word) {
+    return `${word[0].toUpperCase()}${word.slice(1)}`;
+}
+console.log(`${ capitalize('hello')},${ capitalize('world')}!`);
Index: append.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/append.js b/append.js
new file mode 100644
--- /dev/null	(date 1609591848847)
+++ b/append.js	(date 1609591848847)
@@ -0,0 +1,7 @@
+let value = '';
+function append() {
+    value = `${value}abc`;
+    console.log(value);
+}
+append();//abc
+append();//abcabc
\ No newline at end of file
Index: tagFunction.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tagFunction.js b/tagFunction.js
new file mode 100644
--- /dev/null	(date 1609592954470)
+++ b/tagFunction.js	(date 1609592954470)
@@ -0,0 +1,17 @@
+let a = 6;
+let b = 9;
+
+function simpleTag(strings, ... expressions) {
+
+    console.log(strings);
+    for(const expression of expressions){
+        console.log(expression);
+    }
+    return 'foobar';
+}
+
+let untaggedResult = `${a} + ${b} = ${a + b}`; //6 + 9 = 15
+let taggedResult = simpleTag`${a} + ${b} = ${a + b}`;
+
+console.log(untaggedResult);
+console.log(taggedResult);
\ No newline at end of file
Index: zipTag.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/zipTag.js b/zipTag.js
new file mode 100644
--- /dev/null	(date 1609594687156)
+++ b/zipTag.js	(date 1609594687156)
@@ -0,0 +1,14 @@
+let a = 6,
+    b = 9;
+
+function zipTag(strings, ...expressions) {
+    console.log(expressions); //Array
+    return strings[0] + expressions.map((e, i) =>
+        `${e}${strings[i + 1]}`).join('');
+}
+
+let untaggedResult = `${a} + ${b} = ${a + b}`; //6 + 9 = 15
+let taggedResult = zipTag`${a} + ${b} = ${a + b}`;
+
+console.log(untaggedResult);
+console.log(taggedResult);
\ No newline at end of file
Index: map.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/map.js b/map.js
new file mode 100644
--- /dev/null	(date 1609626557248)
+++ b/map.js	(date 1609626557248)
@@ -0,0 +1,2 @@
+let array = [1,2,3];
+console.log(array.map((e, i)=>`${e}${array[i]}`));
\ No newline at end of file
